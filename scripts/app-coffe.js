// Generated by CoffeeScript 1.11.1
(function() {
  var Task, TaskCollection, dummyTasks;

  dummyTasks = ["Testowe zadanie", "PamiÄ™taj by nas usunac"];

  if (!localStorage.getItem('tasks')) {
    localStorage.setItem('tasks', dummyTasks);
  }

  Task = (function() {
    function Task(title, done) {
      if (done == null) {
        done = false;
      }
      this.id = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1;
      this.title = title;
      this.done = done;
      this.doneAt = null;
    }

    Task.prototype.getNodeString = function() {
      if (this.$node == null) {
        this.$node = $("<li><input class='teal accent-2' type='checkbox' id='task-" + this.id + "'><label for='task-" + this.id + "'>" + this.title + "</label><a href='#'><i class='material-icons right-float teal-text '>not_interested</i></a></li>");
      }
      return this.$node;
    };

    return Task;

  })();

  TaskCollection = (function() {
    function TaskCollection($list, tasks) {
      if (tasks == null) {
        tasks = {};
      }
      this.tasks = tasks;
      this.list = $list;
      this.list.html('');
      this.addTasks(tasks);
    }

    TaskCollection.prototype.addTask = function(task) {
      this.list.append(task.getNodeString());
      return this.tasks[task.id] = task;
    };

    TaskCollection.prototype.addTasks = function(tasks) {
      var i, len, ref, results, task;
      ref = this.tasks;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        task = ref[i];
        results.push(this.addTask(task));
      }
      return results;
    };

    TaskCollection.prototype.getTask = function(taskID) {
      return this.tasks[taskID];
    };

    return TaskCollection;

  })();

  $(function() {
    var loadTasks, todo;
    todo = new TaskCollection($('.js-todo-list'));
    loadTasks = function() {
      var i, len, ref, results, storagedTasks, task, taskTitle;
      storagedTasks = localStorage.getItem("tasks");
      ref = storagedTasks.split(',');
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        taskTitle = ref[i];
        task = new Task(taskTitle);
        results.push(todo.addTask(task));
      }
      return results;
    };
    loadTasks();
    return $('#js-remove-list').click(function(evt) {
      evt.preventDefault();
      if (confirm("Napewno usunac wszystkie zadania ?")) {
        localStorage.clear();
      }
      return void 0;
    });
  });

}).call(this);
