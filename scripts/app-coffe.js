// Generated by CoffeeScript 1.11.1
(function() {
  var Task, TaskCollection, initialize;

  initialize = function() {
    var dummyTasks;
    dummyTasks = ["Testowe zadanie", "PamiÄ™taj by nas usunac"];
    if (!localStorage.getItem('tasks')) {
      return localStorage.setItem('tasks', dummyTasks);
    }
  };

  initialize();

  Task = (function() {
    function Task(title, done) {
      if (done == null) {
        done = false;
      }
      this.id = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1;
      this.title = title;
      this.done = done;
      this.doneAt = null;
    }

    Task.prototype.markAsDone = function() {
      var $doneAtEm, $label;
      this.done = true;
      this.doneAt = new Date();
      $label = this.$node.find('label');
      $label.addClass('taskDone');
      $doneAtEm = $('<em>').text("(" + (this.doneAt.toLocaleString()) + ")");
      return $label.append($doneAtEm);
    };

    Task.prototype.markAsUndone = function() {
      var $doneAtEm, $label;
      this.done = false;
      this.doneAt = null;
      $label = this.$node.find('label');
      $label.removeClass('taskDone');
      return $doneAtEm = this.$node.find('em').remove();
    };

    Task.prototype.getNodeString = function() {
      var task;
      task = this;
      if (this.$node == null) {
        this.$node = $("<li><input class='teal accent-2' type='checkbox' id='task-" + this.id + "'><label for='task-" + this.id + "'>" + this.title + "</label><i data-id='" + this.id + "'' class='js-remove-task material-icons right-float teal-text '>not_interested</i></li>");
        this.$node.find('input').change(function() {
          if ($(this).is(":checked")) {
            return task.markAsDone();
          } else {
            return task.markAsUndone();
          }
        });
      }
      return this.$node;
    };

    return Task;

  })();

  TaskCollection = (function() {
    function TaskCollection($list, tasks) {
      if (tasks == null) {
        tasks = {};
      }
      this.tasks = tasks;
      this.list = $list;
      this.list.html('');
      this.addTasks(tasks);
    }

    TaskCollection.prototype.addTask = function(task) {
      this.list.append(task.getNodeString().hide());
      task.getNodeString().fadeIn();
      return this.tasks[task.id] = task;
    };

    TaskCollection.prototype.addTasks = function(tasks) {
      var i, len, ref, results, task;
      ref = this.tasks;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        task = ref[i];
        results.push(this.addTask(task));
      }
      return results;
    };

    TaskCollection.prototype.getTask = function(taskID) {
      return this.tasks[taskID];
    };

    TaskCollection.prototype.clearTask = function(taskID) {
      var storaged, title, updated;
      $("#task-" + taskID).parent('li').animate({
        height: 0,
        padding: 0,
        border: 0
      }).fadeOut;
      title = $("#task-" + taskID).siblings('label').html();
      storaged = localStorage.getItem('tasks');
      updated = storaged.replace(title, '').replace(',,', ',');
      if (updated[-1] === ',') {
        updated = updated.slice(0, -1);
      }
      if (updated[0] === ',') {
        updated = updated.slice(1);
      }
      localStorage.setItem('tasks', updated);
      return delete this.tasks.taskID;
    };

    TaskCollection.prototype.clearTasks = function() {
      return this.list.html('');
    };

    return TaskCollection;

  })();

  $(function() {
    var loadTasks, todo;
    todo = new TaskCollection($('.js-todo-list'));
    loadTasks = function() {
      var i, len, ref, results, storagedTasks, task, taskTitle;
      storagedTasks = localStorage.getItem("tasks");
      if (storagedTasks) {
        ref = storagedTasks.split(',');
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          taskTitle = ref[i];
          task = new Task(taskTitle);
          console.log(task);
          results.push(todo.addTask(task));
        }
        return results;
      }
    };
    loadTasks();
    $('.js-noweZadanie').keypress(function(evt) {
      var storaged, task, taskTitle, updated;
      taskTitle = this.value;
      if (evt.which === 13) {
        task = new Task(taskTitle);
        todo.addTask(task);
        storaged = localStorage.getItem('tasks');
        updated = storaged + ',' + taskTitle;
        localStorage.setItem('tasks', updated);
        this.value = '';
        return $(this).blur();
      }
    });
    $('#js-add').click(function(evt) {
      evt.preventDefault();
      return $('.js-noweZadanie')[0].focus();
    });
    $(document).on('click', '.js-remove-task', function(evt) {
      var id;
      evt.preventDefault();
      id = $(this).data('id');
      console.log(this);
      return todo.clearTask(id);
    });
    $('.btn-large').click(function(evt) {
      var results, task;
      console.log(todo.tasks);
      results = [];
      for (task in todo.tasks) {
        console.log(task);
        if (todo.tasks[task].done) {
          results.push(todo.clearTask(task));
        } else {
          results.push(void 0);
        }
      }
      return results;
    });
    return $('#js-remove-list').click(function(evt) {
      evt.preventDefault();
      if (confirm("Napewno usunac wszystkie zadania ?")) {
        localStorage.clear();
      }
      todo.clearTasks();
      loadTasks();
      return void 0;
    });
  });

}).call(this);
